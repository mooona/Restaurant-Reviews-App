{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/dbhelper.js","js/restaurant_info.js","node_modules/idb/lib/idb.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","dbPromise","DBHelper","_idb2","open","upgradeDb","createObjectStore","keyPath","this","openDatabase","then","db","transaction","objectStore","getAll","date","localStorage","setItem","callback","getCachedMessages","data","fetch","credentials","response","json","restaurants","store","forEach","restaurant","put","openCursor","cursor","advance","deleteRest","err","id","fetchRestaurants","error","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","uniqueNeighborhoods","map","v","indexOf","cuisines","uniqueCuisines","photograph","document","addEventListener","event","initMap","window","fetchRestaurantFromURL","console","mapboxgl","accessToken","locsMap","Map","container","style","center","latlng","zoom","el","createElement","className","Marker","offset","setLngLat","addTo","fillBreadcrumb","self","log","getParameterByName","_dbhelper2","fetchRestaurantById","fillRestaurantHTML","arguments","undefined","getElementById","innerHTML","name","address","image","alt","src","imageUrlForRestaurant","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","day","appendChild","time","reviews","title","noReviews","ul","review","createReviewHTML","li","reviewer","randomColor","Math","floor","random","toString","profile","setAttribute","charAt","reviewdata","nameRate","rating","ratingContainer","yellow","white","comments","breakBorder","breadcrumb","url","location","href","replace","RegExp","exec","decodeURIComponent","onscroll","nav","scrollY","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","obj","method","args","p","apply","proxyProperties","ProxyClass","targetProp","properties","prop","Object","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","value","Cursor","Index","index","_index","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","arr","Array","slice","nativeObject","query","count","instance","items","iterateCursor","push","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete","idb"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import idb from 'idb';\r\n\r\n'use strict';\r\n/**\r\n * Common database helper functions.\r\n */\r\nvar dbPromise;\r\n\r\nclass DBHelper {\r\n\r\n  static openDatabase() {\r\n    return idb.open('restaurants', 1, function (upgradeDb) {\r\n      upgradeDb.createObjectStore('restaurants', { keyPath: 'id' });\r\n    });\r\n  }\r\n\r\n  static getCachedMessages() {\r\n    dbPromise = this.openDatabase();\r\n    return dbPromise.then(function (db) {\r\n\r\n      if (!db) return;\r\n\r\n      var tx = db.transaction('restaurants');\r\n      var store = tx.objectStore('restaurants');\r\n\r\n      return store.getAll();\r\n    });\r\n  }\r\n\r\n  // Util network function.\r\n  static setLastUpdated(date) {\r\n    localStorage.setItem('lastUpdated', date);\r\n  }\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = 8000 // Change this to your server port\r\n    return `http://localhost:${port}/data/restaurants.json`;\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    this.getCachedMessages().then(function (data) {\r\n      if (data.length > 0) {\r\n        return callback(null, data);\r\n      }\r\n\r\n      fetch('http://localhost:1337/restaurants', {\r\n        credentials: 'same-origin'\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(restaurants => {\r\n        dbPromise.then(function (db) {\r\n          if (!db) return;\r\n          var tx = db.transaction('restaurants', 'readwrite');\r\n          var store = tx.objectStore('restaurants');\r\n\r\n          restaurants.forEach(restaurant => store.put(restaurant));\r\n\r\n          store.openCursor(null, 'prev').then(function (cursor) {\r\n            return cursor.advance(30);\r\n          }).then(function deleteRest(cursor) {\r\n            if (!cursor) return;\r\n            cursor.delete();\r\n            return cursor.continue().then(deleteRest);\r\n          });\r\n        })\r\n        return callback(null, restaurants);\r\n      })\r\n    }).catch(err => {\r\n      callback(err, null);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    // fetch all restaurants with proper error handling.\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        const restaurant = restaurants.find(r => r.id == id);\r\n        if (restaurant) { // Got the restaurant\r\n          callback(null, restaurant);\r\n        } else { // Restaurant does not exist in the database\r\n          callback('Restaurant does not exist', null);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    if (restaurant.id == 10) return (`./img/10.webp`);\r\n    return (`./img/${restaurant.photograph}.webp`);\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = DBHelper;","'use strict';\n\nimport DBHelper from './dbhelper';\nlet restaurant;\nvar map;\n\n/**\n * Initialize map box map, called from HTML.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    initMap();\n});\nwindow.initMap = () => {\n    fetchRestaurantFromURL((error, restaurant) => {\n\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n        mapboxgl.accessToken = 'pk.eyJ1IjoibWZhcmciLCJhIjoiY2p1ZDloNmRiMDR3MDN5bXk5ZmUzdTRodiJ9.7Tp8zK2yRKBICT5Ry9q64Q';\n        var locsMap = new mapboxgl.Map({\n            container: 'locsMap',\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: restaurant.latlng, // starting position\n            zoom: 12// starting zoom\n        });\n        var el = document.createElement('div');\n        el.className = 'marker';\n        let mymarker =new mapboxgl.Marker(el, { offset: [0, -23] }).setLngLat(restaurant.latlng).addTo(locsMap);\n      fillBreadcrumb();\n    //  DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n    }\n  });\n}\n\n/**\n * Get current restaurant from page URL.\n */\nvar fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    console.log('already fetched');\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nvar fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const image = document.getElementById('restaurant-img');\n    image.alt=restaurant.name + \" restaurant image\"\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nvar fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nvar fillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.className = 'reviews-label';\n  title.innerHTML = reviews.length + ' Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\nvar createReviewHTML = (review) => {\n  const li = document.createElement('li');\n  li.className = 'reviewContainer';\n  /*reviewer details*/\n    const reviewer= document.createElement('div');\n    reviewer.className = 'reviewer-details-container';\n    li.appendChild(reviewer);\n\n    /*profile picture*/\n    let randomColor = Math.floor(Math.random()*16777215).toString(16);\n    const profile= document.createElement('div');\n    profile.className=\"user-profile-pic\";\n    profile.setAttribute('style', 'background-color:#'+randomColor+';');\n    profile.innerHTML= review.name.charAt(0);\n    reviewer.appendChild(profile);\n\n    const reviewdata= document.createElement('div');\n    reviewdata.className = 'review-details-container';\n    reviewer.appendChild(reviewdata);\n\n    const nameRate =document.createElement('div');\n    nameRate.className = 'name-rate-container';\n    reviewdata.appendChild(nameRate);\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n    nameRate.appendChild(name);\n\n    /*draw rating in stars instead of numbers function*/\n  const rating = document.createElement('div');\n  rating.setAttribute('aria-label', `Rating ${review.rating}`);\n  rating.className =\"rating-container\";\n    let ratingContainer= \"\";\n    let yellow= review.rating;\n    let white = 5 - yellow;\n    while (yellow >= 1) {\n        ratingContainer += '<i class=\"star-yellow\" aria-hidden=\"true\">&starf;</i>';\n        yellow--;\n    }\n    while (white >= 1) {\n        ratingContainer += '<i class=\"star-white\" aria-hidden=\"true\">&starf;</i>';\n        white--;\n    }\n    rating.innerHTML = ratingContainer;\n    nameRate.appendChild(rating);\n    /*date*/\n    const date = document.createElement('p');\n    date.innerHTML = review.date;\n    date.setAttribute('aria-label', `Review date`);\n    date.className =\"review-date\";\n    reviewdata.appendChild(date);\n\n/*comments*/\n  const comments = document.createElement('p');\n  comments.innerHTML = '<span class=\"review-date\" aria-label=\"Review date\">'+review.date+'</span>' + review.comments;\n    comments.className =\"comment\";\n  li.appendChild(comments);\n\n/*break line*/\n    const breakBorder = document.createElement('div');\n    breakBorder.className =\"break\";\n    breakBorder.setAttribute('aria-hidden', true);\n    li.appendChild(breakBorder);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nvar fillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\nvar getParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n/*on scroll change the breadcrumb nav color*/\nwindow.onscroll = () => {\n    const nav = document.getElementById('breadcrumb');\n    //const navpos= nav.offset().top;\n    if( window.scrollY <= 12) nav.className = '';\n    else nav.className = 'scroll';\n};\n\n//;","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n  \n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n"]}