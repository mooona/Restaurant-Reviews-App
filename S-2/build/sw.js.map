{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sw.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","importScripts","workbox","console","log","setConfig","debug","precaching","precacheAndRoute","url","revision","routing","registerRoute","RegExp","strategies","staleWhileRevalidate","cacheName","cacheExpiration","maxEntries","cacheableResponse","statuses","cacheFirst","plugins","expiration","Plugin","maxAgeSeconds","networkFirst"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBAAAK,cAAA,2ECcIC,SACAC,QAAQC,IAAG,uBAIXF,QAAQG,UAAU,CAAEC,OAAO,IAA3BJ,QAAQK,WAAUC,iBAAkB,CAIhC,CACIC,IAAO,CAFP,0BAGQ,mBA0BI,eAEjB,iBAxBa,yBACA,wBA0BA,sBAGG,cACX,cACI,cACH,cACD,cAEN,cA3Bc,cACA,cA6BA,cA3BA,eACA,oBA8BJ,mBACO,oCAEP,+BACI,kCACA,mBAId,eAhCc,qBAERC,SAAY,sCAyCvBR,QAAMS,QAAAC,cACH,IAAQC,OAAG,wCACdX,QAAAY,WAAAC,qBAAA,CAnCWC,UAAW,mBACXC,gBAAiB,CACbC,WAAY,IAEhBC,kBAAmB,CAACC,SAAU,CAAC,EAAG,SAK1ClB,QAAQS,QAAQC,cACZ,8BAGAV,QAAQY,WAAWO,WAAW,CAC1BL,UAAW,eACXM,QAAS,CACL,IAAIpB,QAAQqB,WAAWC,OAAO,CAC1BN,WAAY,GACZO,cAAe,aAO/BvB,QAAQS,QAAQC,cACZ,IAAIC,OAAO,uBACXX,QAAQY,WAAWY,aAAa,CAC5BV,UAAW,oBACXG,kBAAmB,CAACC,SAAU,CAAC,EAAG,UAK1CjB,QAAQC,IAAG","file":"sw.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","importScripts('https://storage.googleapis.com/workbox-cdn/releases/3.1.0/workbox-sw.js');\n\n/**\n * Workbox 3.1.0\n * Workbox - https://developers.google.com/web/tools/workbox/\n * Codelab - https://codelabs.developers.google.com/codelabs/workbox-lab/\n *\n * Workbox creates a configuration file (in this case workbox-config.js) that\n * workbox-cli uses to generate service workers.\n\n * The importScripts call imports the workbox-sw.js library so the workbox\n * object gives our service worker access to all the Workbox modules.\n */\n\nif (workbox) {\n    console.log(`Workbox loaded. swj`);\n\n    // Debugging Workbox\n    // Force production builds\n    workbox.setConfig({ debug: false });\n\n    // cache-first handler.\n    workbox.precaching.precacheAndRoute([\n        {\n            \"url\": [\n                    \"./data/restaurants.json\",\n                    \"./js/dbhelper.js\",\n                    \"./js/main.js\",\n                    \"./js/sw.src.js\",\n                    \"./js/workbox-config.js\",\n                    \"./js/mapBox/mapBox.js\",\n                    \"./mapBox/mapBox.css\",\n                    \"./img/1.jpg\",\n                    \"./img/2.jpg\",\n                    \"./img/3.jpg\",\n                    \"./img/4.jpg\",\n                    \"./img/5.jpg\",\n                    \"./img/6.jpg\",\n                    \"./img/7.jpg\",\n                    \"./img/8.jpg\",\n                    \"./img/9.jpg\",\n                    \"./img/10.jpg\",\n                    \"./img/favicon.png\",\n                    \"./img/marker.svg\",\n                    \"./css/fonts/Quicksand-Regular.ttf\",\n                    \"./css/fonts/Muli-Regular.ttf\",\n                    \"./css/fonts/Raleway-Regular.ttf\",\n                    \"./css/styles.css\",\n                    \"./index.html\",\n                    \"./restaurant.html\"\n            ],\n            \"revision\": \"ef524a681d8e0c52cdd55e6c0bb53ec3\"\n        }\n    ]);\n\n    // Google APIs\n    workbox.routing.registerRoute(\n        new RegExp('(.*).(?:googleapis|gstatic).com/(.*)'),\n        workbox.strategies.staleWhileRevalidate({\n            cacheName: 'cache-googleapis',\n            cacheExpiration: {\n                maxEntries: 20\n            },\n            cacheableResponse: {statuses: [0, 200]}\n        })\n    );\n\n    // Images\n    workbox.routing.registerRoute(\n        /\\.(?:png|gif|jpg|jpeg|svg)$/,\n        // Whenever the app requests images, the service worker checks the\n        // cache first for the resource before going to the network.\n        workbox.strategies.cacheFirst({\n            cacheName: 'cache-images',\n            plugins: [\n                new workbox.expiration.Plugin({\n                    maxEntries: 60,\n                    maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days\n                })\n            ]\n        })\n    );\n\n    // RestaurantsDetails\n    workbox.routing.registerRoute(\n        new RegExp('restaurant.html(.*)'),\n        workbox.strategies.networkFirst({\n            cacheName: 'cache-restaurants',\n            cacheableResponse: {statuses: [0, 200]}\n        })\n    );\n\n} else {\n    console.log(`Workbox failed to load.`);\n}\n"]}